//@prepros-append pages/common.js
//@prepros-append pages/validation.js
//@prepros-append pages/maps.js
//@prepros-append pages/popup.js
//@prepros-append pages/sliders.js
//@prepros-append pages/index.js
//@prepros-append pages/catalog.js
//@prepros-append pages/product.js
//@prepros-append pages/articles.js
//@prepros-append pages/cabinet.js
//@prepros-append pages/reviews.js
//@prepros-append pages/feed.js
//@prepros-append pages/compare.js
//@prepros-append pages/cart.js
$('input[type=tel]').mask('+7 (999) 999-99-99');

function number_format(number, decimals, dec_point, thousands_sep) {
    var i, j, kw, kd, km;
    if (isNaN(decimals = Math.abs(decimals))) {
        decimals = 2;
    }
    if (dec_point == undefined) {
        dec_point = ",";
    }
    if (thousands_sep == undefined) {
        thousands_sep = ".";
    }
    i = parseInt(number = (+number || 0).toFixed(decimals)) + "";
    if ((j = i.length) > 3) {
        j = j % 3;
    } else {
        j = 0;
    }
    km = (j ? i.substr(0, j) + thousands_sep : "");
    kw = i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + thousands_sep);
    kd = (decimals ? dec_point + Math.abs(number - i).toFixed(decimals).replace(/-/, 0).slice(2) : "");
    return km + kw + kd;
}

function Switches(prop) {
    this.sws = document.querySelector(prop.sws);
    this.width = this.sws.offsetWidth;
    this.swsList = document.querySelectorAll(prop.sw);
    this.line = document.querySelector(prop.line);
    this.tabs = document.querySelectorAll(prop.tab);
    this.tabsObj = document.querySelector(prop.tabs);
    this.tabSelector = prop.tab;
    this.autoWidth = prop.autoWidth || false;
    // this.scrollbar = prop.scrollbar || true;

    if (prop.switchActive === false) {
        this.switchActive = false
    } else {
        this.switchActive = true;
    }

    if (prop.scrollbar === false) {
        this.scrollbar = false;
    } else {
        this.scrollbar = true;
    }

    let that = this;

    this.init = function () {
        let $this = that.swsList[0],
            percent = ($this.offsetLeft / that.width) * 100,
            id = $this.dataset.id,
            maxH = 0,
            tab = document.querySelector(that.tabSelector + '[data-id="' + id + '"]');


        for (let i = 0; i < that.swsList.length; i++) {
            that.swsList[i].classList.remove('active');
        }

        for (let i = 0; i < that.tabs.length; i++) {
            let tab = that.tabs[i],
                height = tab.offsetHeight;
            tab.classList.remove('active');
            if (maxH < height) {
                maxH = height;
            }
        }
        that.tabsObj.style.height = maxH + 'px';

        tab.classList.add('active');
        $this.classList.add('active');

        if (that.scrollbar) {
            that.line.style.left = percent + '%';

            if (that.autoWidth) {
                let lineWidth = $this.offsetWidth + 'px';
                that.line.style.width = lineWidth;
            }
        }
    };

    for (let i = 0; i < that.swsList.length; i++) {
        that.swsList[i].addEventListener('click', function (e) {

            let percent = (this.offsetLeft / that.width) * 100,
                id = this.dataset.id,
                tab = document.querySelector(that.tabSelector + '[data-id="' + id + '"]');


            for (let i = 0; i < that.swsList.length; i++) {
                that.swsList[i].classList.remove('active');
            }

            for (let i = 0; i < that.tabs.length; i++) {
                that.tabs[i].classList.remove('active');
            }

            tab.classList.add('active');
            this.classList.add('active');

            if (that.scrollbar) {
                that.line.style.left = percent + '%';

                if (that.autoWidth) {
                    let lineWidth = this.offsetWidth + 'px';
                    that.line.style.width = lineWidth;
                }
            }

        });
    }
}

function animateToCart(item) {

    var offset = item.offset(),
        width = item.outerWidth(),
        height = item.outerHeight(),
        offsetTop = offset.top,
        offsetLeft = offset.left,
        cart = $('.basket-link');

    $(item)
        .clone()
        .css({
            width: width,
            height: height,
            position: 'absolute',
            'z-index': '11100',
            top: offsetTop,
            left: offsetLeft
        })
        .appendTo("body")
        .animate({
            opacity: 0.05,
            left: cart.offset()['left'],
            top: cart.offset()['top'],
            width: 20,
            height: 13.2
        }, 2000, function () {
            $(this).remove();
        });
}

function getMediaCss() {
    if ($(window).width() < 1200) {
        return 'lg'
    } else if ($(window).width() < 992) {
        return 'md'
    } else if ($(window).width() < 768) {
        return 'sm'
    } else if ($(window).width() < 768) {
        return 'xs'
    } else {
        return 'default'
    }
}

function calcPrice() {
    let items = $('.cart__item'),
        totalObj = $('.cart__price-price').find('.price__val'),
        basketLink = $('.basket-link .compare-link__num'),
        totalCount = 0,
        total = 0;

    items.each(function (indx, elem) {
        let item = $(elem),
            count = Number(item.find('.count__input').val()),
            price = parseFloat(item.find('.price__val').text());

        totalCount = totalCount + count;
        total = total + (count * price);
    });

    basketLink.text(totalCount);
    totalObj.text(number_format(total, 2, '.', ''));
    sendCartForm();
}

function sendCartForm() {
    let form = $('.cart__form'),
        data = form.serialize();

    $.ajax({
        dataType: "json",
        type: "POST",
        url: 'ajax.php',
        data: data,
        success: function (result) {
            if (result.status) {
                console.log(result);
            } else {
                alert('Что-то пошло не так, попробуйте еще раз!!!');
            }
        },
        error: function (result) {
            alert('Что-то пошло не так, попробуйте еще раз!!!');
        }
    });
}

$(function (e) {
    let drop = $('.drop');

    $('body').on('click', '.buy', function (e) {
        e.preventDefault();
        let $this = $(this),
            item = $this.closest('.buyItem'),
            id = item.attr('data-id'),
            count = item.find('.count__input'),
            val = count.val(),
            img = item.find('.buyImg'),
            data = {
                id: id,
                val: val,
                action: 'buyAjax'
            },
            basket = $('.basket-link');

        $.ajax({
            dataType: "json",
            type: "POST",
            url: 'ajax.php',
            data: data,
            success: function (result) {
                if (result.status) {
                    basket.replaceWith(result.html);
                    animateToCart(img);
                } else {
                    alert('Что-то пошло не так, попробуйте еще раз!!!');
                }
            },
            error: function (result) {
                alert('Что-то пошло не так, попробуйте еще раз!!!');
            }
        });

    });

    $('body').on('click', '.count__up', function (e) {
        e.preventDefault();

        let $this = $(this),
            count = $this.closest('.count'),
            input = count.find('.count__input'),
            val = Number(input.val());
        val++;

        input.val(val);
        if ($(this).closest('.pr').length == 0) {
            calcPrice();
        }
    });

    $('body').on('click', '.count__down', function (e) {

        e.preventDefault();

        let $this = $(this),
            count = $this.closest('.count'),
            input = count.find('.count__input'),
            val = Number(input.val());
        if (val > 1) {
            val--;
        }

        input.val(val);
        if ($(this).closest('.pr').length == 0) {
            calcPrice();
        }
    });

    $('body').on('change', '.fz__input', function (e) {
        let $this = $(this),
            form = $this.closest('form'),
            submit = form.find('[type=submit]');

        submit.toggleClass('disabled');
    });

    if ($(window).width() < 1200) {
        $('.nav__link_sub').on('click', function (e) {
            e.preventDefault();
            $(this).next().slideToggle();
        });
    }

    $('.drop__close').on('click', function (e) {
        drop.removeClass('active');
    });
    $('.drop-btn').on('click', function (e) {
        drop.addClass('active');
    });

    $('body').on('click', function (e) {
        let target = $(e.target);
        if (target.closest('.drop__wrapper').length == 0 && target.closest('.drop-btn').length == 0 && target.closest('.popup').length == 0) {
            drop.removeClass('active');
        }
    });


});


$(function () {


});
/*YANDEX*/
$(function ()   {
    ymaps.ready(init);
    var myMap,
        myPlacemark;

    function init() {

        if ($('#map').length) {
            var center = [55.733996408140875,37.712371096572895];
            // if ($(window).width() < 576) {
            //     center = [55.609501798660396, 37.61325538360591];
            // }

            myMap = new ymaps.Map("map", {
                center: center,
                zoom: 17,
                controls: []
            });


            myMap.behaviors.disable(['scrollZoom']);
            // myMap.controls.remove('geolocationControl')
            //     .remove('searchControl')
            //     .remove('trafficControl')
            //     .remove('typeSelector')
            //     .remove('fullscreenControl')
            //     .remove('zoomControl')
            //     .remove('rulerControl');

            myPin = new ymaps.GeoObjectCollection({}, {
                // iconLayout: 'default#image',
                // iconImageHref: '/img/icons/map-marker.svg',
                // iconImageSize: [46, 57],
                // iconImageOffset: [-15, -55]
            });


            myPlacemark1 = new ymaps.Placemark([55.734299088188656, 37.71238182540895], {
                    balloonContentHeader: "Вкусита",
                    balloonContentBody: "Оптово - розничный интернет магазин орехов и сухофруктов",
                    balloonContentFooter: "Россия, 125040, г. Москва, улица Нижегородская, 29-33",
                    hintContent: "vkusita.ru"
                },
                {
                    iconLayout: 'default#image',
                    iconImageHref: 'images/icons/pinY.svg',
                    iconImageSize: [75, 90],
                    iconImageOffset: [-45, -75]
                    // preset: 'islands#redGlyphIcon'
                });


            myPin.add(myPlacemark1);
            myMap.geoObjects.add(myPin);
        }
    }
});
/*END YANDEX*/
$(function () {
    let popup = $('.popup'),
        popupWrap = popup.find('.popup__wrapper');


    $('body').on('click', '.callorderOpen', function (e) {
        e.preventDefault();

        let data = {
            action: 'callorderOpen'
        };

        $.ajax({
            dataType: "json",
            type: "POST",
            url: 'ajax.php',
            data: data,
            success: function (result) {
                if (result.status) {
                    popupWrap.html(result.html);
                    popup.addClass('active');
                    $('input[type=tel]').mask('+7 (999) 999-99-99');

                    $('.callorder__form').validate(
                        {
                            rules: {
                                name: "required",
                                tel: "required"
                            },
                            messages: {
                                name: "Введите ваше Имя",
                                tel: "Введите ваш Телефон",
                            },

                            submitHandler: function (form) {
                                sendAjax(form);
                            }
                        }
                    );

                } else {
                    alert('Что-то пошло не так, попробуйте еще раз!!!');
                }
            },
            error: function (result) {
                alert('Что-то пошло не так, попробуйте еще раз!!!');
            }
        });

    });

    $('body').on('click', '.fastOrder', function (e) {
        e.preventDefault();
            let $this = $(this),
                item = $this.closest('.buyItem'),
                count = item.find('.count__input'),
                val = count.val(),
                id = Number(item.attr('data-id'));


        let data = {
            id: id,
            val: val,
            action: 'fastOrder'
        };

        $.ajax({
            dataType: "json",
            type: "POST",
            url: 'ajax.php',
            data: data,
            success: function (result) {
                if (result.status) {
                    popupWrap.html(result.html);
                    popup.addClass('active');
                    $('input[type=tel]').mask('+7 (999) 999-99-99');

                    $('.callorder__form').validate(
                        {
                            rules: {
                                name: "required",
                                tel: "required"
                            },
                            messages: {
                                name: "Введите ваше Имя",
                                tel: "Введите ваш Телефон",
                            },

                            submitHandler: function (form) {
                                sendAjax(form);
                            }
                        }
                    );

                } else {
                    alert('Что-то пошло не так, попробуйте еще раз!!!');
                }
            },
            error: function (result) {
                alert('Что-то пошло не так, попробуйте еще раз!!!');
            }
        });

    });

    popup.on('click', function (e) {
       let target = $(e.target);

       if (target.closest('.popup__wrapper').length === 0){
           popup.removeClass('active');
       }
    });

    $('body').on('click', '.form__close', function (e) {
       e.preventDefault();
       popup.removeClass('active');
    });

    function sendAjax(form) {
        let data = $(form).serialize();

        $.ajax({
            dataType: "json",
            type: "POST",
            url: 'ajax.php',
            data: data,
            success: function (result) {
                if (result.status) {
                    popupWrap.html(result.html);
                    popup.addClass('active');
                } else {
                    alert('Что-то пошло не так, попробуйте еще раз!!!');
                }
            },
            error: function (result) {
                alert('Что-то пошло не так, попробуйте еще раз!!!');
            }
        });
    }

    $('.auth').on('click', function (e) {
        e.preventDefault();
        let data = {
            action: 'enter'
        };

        $.ajax({
            dataType: "json",
            type: "POST",
            url: 'ajax.php',
            data: data,
            success: function (result) {
                if (result.status) {
                    popupWrap.html(result.html);
                    popup.addClass('active');
                    $('.enter__form').validate(
                        {
                            rules: {
                                email: "required",
                                password: {
                                    required: true,
                                    minlength: 6
                                },
                            },
                            messages: {
                                email: "Введите Email",
                                password: {
                                    required: "Введите ваш пароль",
                                    minlength: "Не менее 6-ти символов"
                                },
                            },

                            submitHandler: function (form) {
                                sendEnterAjax(form)
                            }
                        }
                    );
                } else {
                    alert('Что-то пошло не так, попробуйте еще раз!!!');
                }
            },
            error: function (result) {
                alert('Что-то пошло не так, попробуйте еще раз!!!');
            }
        });
    });

    function sendEnterAjax(form) {
        let data = $(form).serialize();

        $.ajax({
            dataType: "json",
            type: "POST",
            url: 'ajax.php',
            data: data,
            success: function (result) {
                if (result.status) {
                    window.location = 'cabinet.html'
                } else {
                    popupWrap.html(result.html);
                    popup.addClass('active');
                    $('.enter__form').validate(
                        {
                            rules: {
                                email: "required",
                                password: {
                                    required: true,
                                    minlength: 6
                                },
                            },
                            messages: {
                                email: "Введите Email",
                                password: {
                                    required: "Введите ваш пароль",
                                    minlength: "Не менее 6-ти символов"
                                },
                            },
                            submitHandler: function (form) {
                                sendEnterAjax(form)
                            }
                        }
                    );
                }
            },
            error: function (result) {
                alert('Что-то пошло не так, попробуйте еще раз!!!');
            }
        });
    }

    $('body').on('click','.regForm', function (e) {
        e.preventDefault();
        let data = {
            action: 'reg'
        };

        $.ajax({
            dataType: "json",
            type: "POST",
            url: 'ajax.php',
            data: data,
            success: function (result) {
                if (result.status) {
                    popupWrap.html(result.html);
                    popup.addClass('active');
                    $('.reg__form').validate(
                        {
                            rules: {
                                name: "required",
                                email: "required",
                                password: {
                                    required: true,
                                    minlength: 6
                                },
                                confirmPassword: {
                                    required: true,
                                    equalTo: "#passwordReg"
                                },
                            },
                            messages: {
                                name: "Введите Имя",
                                email: "Введите Email",
                                password: {
                                    required: "Введите ваш пароль",
                                    minlength: "Не менее 6-ти символов"
                                },
                                confirmPassword: {
                                    required: "Введите ваш пароль",
                                    equalTo: "Пароли не совпадают"
                                }
                            },

                            submitHandler: function (form) {
                                sendRegAjax(form)
                            }
                        }
                    );
                } else {
                    alert('Что-то пошло не так, попробуйте еще раз!!!');
                }
            },
            error: function (result) {
                alert('Что-то пошло не так, попробуйте еще раз!!!');
            }
        });
    });

    function sendRegAjax(form) {
        let data = $(form).serialize();

        $.ajax({
            dataType: "json",
            type: "POST",
            url: 'ajax.php',
            data: data,
            success: function (result) {
                if (result.status) {
                    popupWrap.html(result.html);
                    popup.addClass('active');
                } else {
                    popupWrap.html(result.html);
                    popup.addClass('active');
                    $('.reg__form').validate(
                        {
                            rules: {
                                name: "required",
                                email: "required",
                                password: {
                                    required: true,
                                    minlength: 6
                                },
                                confirmPassword: {
                                    required: true,
                                    equalTo: "#passwordReg"
                                },
                            },
                            messages: {
                                name: "Введите Имя",
                                email: "Введите Email",
                                password: {
                                    required: "Введите ваш пароль",
                                    minlength: "Не менее 6-ти символов"
                                },
                                confirmPassword: {
                                    required: "Введите ваш пароль",
                                    equalTo: "Пароли не совпадают"
                                }
                            },

                            submitHandler: function (form) {
                                sendRegAjax(form)
                            }
                        }
                    );
                }
            },
            error: function (result) {
                alert('Что-то пошло не так, попробуйте еще раз!!!');
            }
        });
    }

    $('body').on('click','.recoveryForm', function (e) {
        e.preventDefault();
        let data = {
            action: 'recovery'
        };

        $.ajax({
            dataType: "json",
            type: "POST",
            url: 'ajax.php',
            data: data,
            success: function (result) {
                if (result.status) {
                    popupWrap.html(result.html);
                    popup.addClass('active');
                    $('.recovery__form').validate(
                        {
                            rules: {
                                email: "required",
                            },
                            messages: {
                                email: "Введите Email",
                            },

                            submitHandler: function (form) {
                                sendRecoveryAjax(form)
                            }
                        }
                    );
                } else {
                    alert('Что-то пошло не так, попробуйте еще раз!!!');
                }
            },
            error: function (result) {
                alert('Что-то пошло не так, попробуйте еще раз!!!');
            }
        });
    });


    function sendRecoveryAjax(form) {
        let data = $(form).serialize();

        $.ajax({
            dataType: "json",
            type: "POST",
            url: 'ajax.php',
            data: data,
            success: function (result) {
                if (result.status) {
                    popupWrap.html(result.html);
                    popup.addClass('active');
                } else {
                    popupWrap.html(result.html);
                    popup.addClass('active');
                    $('.recovery__form').validate(
                        {
                            rules: {
                                email: "required",
                            },
                            messages: {
                                email: "Введите Email",
                            },

                            submitHandler: function (form) {
                                sendRecoveryAjax(form)
                            }
                        }
                    );
                }
            },
            error: function (result) {
                alert('Что-то пошло не так, попробуйте еще раз!!!');
            }
        });
    }

    $('.ifeed__form').validate(
        {
            rules: {
                name: "required",
                tel: "required",
            },
            messages: {
                name: "Введите Имя",
                tel: "Введите Телефон",
            },

            submitHandler: function (form) {
                let data = $(form).serialize();

                $.ajax({
                    dataType: "json",
                    type: "POST",
                    url: 'ajax.php',
                    data: data,
                    success: function (result) {
                        if (result.status) {
                            popupWrap.html(result.html);
                            popup.addClass('active');
                        } else {
                            alert('Что-то пошло не так, попробуйте еще раз!!!');
                        }
                    },
                    error: function (result) {
                        alert('Что-то пошло не так, попробуйте еще раз!!!');
                    }
                });
            }
        }
    );

});
$(function () {
    let ispecsSlider = new Swiper ('.ispecs__container', {
        slidesPerView: 4,
        slidesPerGroup: 4,
        spaceBetween: 20,
        navigation: {
            nextEl: '.ispecs__next .arrow',
            prevEl: '.ispecs__prev .arrow',
        },
        pagination: {
            el: '.ispecs__pag',
            clickable: true
        },
        breakpoints: {
            // when window width is <= 1199.99px
            767.99: {
                slidesPerView: 1,
                slidesPerGroup: 1,
                spaceBetween: 20
            },
            // when window width is <= 1199.99px
            1199.99: {
                slidesPerView: 2,
                slidesPerGroup: 2,
                spaceBetween: 20
            }
        }

    });

    let irevsSlider = new Swiper ('.irevs__container', {
        slidesPerView: 2,
        spaceBetween: 20,
        loop: true,
        navigation: {
            nextEl: '.irevs__next .arrow',
            prevEl: '.irevs__prev .arrow',
        },
        breakpoints: {
            // when window width is <= 1199.99px
            767.99: {
                slidesPerView: 1,
                spaceBetween: 10,
                pagination: {
                    el: '.irevs__pag',
                    clickable: true
                },
            },
            // when window width is <= 1199.99px
            1199.99: {
                slidesPerView: 1,
                spaceBetween: 10
            }
        }
    });

    let recentlySlider = new Swiper ('.recently__container', {
        slidesPerView: 4,
        spaceBetween: 20,
        navigation: {
            nextEl: '.recently__next .arrow',
            prevEl: '.recently__prev .arrow',
        },
        breakpoints: {
            767.99: {
                slidesPerView: 1,
                spaceBetween: 20,
                pagination: {
                    el: '.recently__pag',
                    clickable: true
                },
            },
            1199.99: {
                slidesPerView: 2,
                spaceBetween: 20,
                pagination: {
                    el: '.recently__pag',
                    clickable: true
                },
            }
        }
    });

    let catalogSlider = new Swiper ('.catalog__banner-container', {
        loop: true,
        speed: 1000,
        pagination: {
            el: '.catalog__banner-pag',
            clickable: true
        },
        autoplay: {
            delay: 3000,
        }
    });

    let compareSwiper = new Swiper ('.compare__container', {
        slidesPerView: 3,
        spaceBetween: 20,
        scrollbar: {
            el: '.compare__scrollbar',
            hide: false,
            draggable: true
        },
        mousewheel: {},
        breakpoints: {
            767.99: {
                slidesPerView: 1
            },
            1199.99: {
                slidesPerView: 2
            }
        }
    });

    $('.ccerts__slider').slick({
        centerMode: true,
        centerPadding: '160px',
        slidesToShow: 1,
        arrows: false,
        dots: true,
        responsive: [
            {
                breakpoint: 768,
                settings: {
                    arrows: false,
                    centerMode: true,
                    centerPadding: '0px',
                    slidesToShow: 1
                }
            }
        ]
    });
});
$(function () {

    $('.search__input').on('input', $.debounce(sendAjax, 300));

    $('.search__input').closest();

    function sendAjax(){
        let $this = $('.search__input'),
            val = $this.val(),
            form = $this.closest('.search'),
            rep = form.find('.search__ajax'),
            data = form.serialize();

        if (val.length > 2) {
            $.ajax({
                dataType: "json",
                type: "POST",
                url: 'ajax.php',
                data: data,
                success: function (result) {
                    if (result.status) {
                        rep.html(result.html).addClass('active');
                    } else {
                        alert('Что-то пошло не так, попробуйте еще раз!!!');
                    }
                },
                error: function (result) {
                    alert('Что-то пошло не так, попробуйте еще раз!!!');
                }
            });
        } else {
            rep.removeClass('active');
        }
    }

    $('.search__clear').on('click', function (e) {
        let $this = $(this),
            form = $this.closest('.search');

        form.trigger('reset');
    });

    $('.search').on('reset', function (e) {
        let $this = $(this),
            ajax = $this.find('.search__ajax');
        ajax.removeClass('active');
    });

    let ispecsSwithes = document.querySelector('.ispecs__sws-list');
    if (ispecsSwithes) {

        let switches = new Switches({
            sws: '.ispecs__sws-list',
            sw: '.ispecs__sw',
            line: '.ispecs__subline',
            tab: '.ispecs__tab',
            tabs: '.ispecs__tabs',
            autoWidth: true
        }).init();
    }

});
$(function () {
    $('.select').styler();

    $('body').on('click', '.catalog__types .type', function (e) {
        let $this = $(this),
            form = $this.closest('form'),
            type = $this.attr('data-type'),
            input = form.find('input[name=type]');

        if (input.val() != type) {
            input.val(type);

            let data = form.serialize();

            sendAjax(form, data);
        }
    });


    $('body').on('change', '.catalog__select-select .select', function (e) {
        let $this = $(this),
            form = $this.closest('form'),
            data = form.serialize();

        sendAjax(form, data);

    });

    function sendAjax(form, data) {
        $.ajax({
            dataType: "json",
            type: "POST",
            url: 'ajax.php',
            data: data,
            success: function (result) {
                if (result.status) {
                    form.replaceWith(result.html);
                    $('.select').styler();
                } else {
                    alert('Что-то пошло не так, попробуйте еще раз!!!');
                }
            },
            error: function (result) {
                alert('Что-то пошло не так, попробуйте еще раз!!!');
            }
        });
    }

    if ($(window).width() < 1200) {
        $('.cats__title').on('click', function (e) {
            $('.cats__list').slideToggle(300);
        });
    }

});
$(function () {
    $('.pr__img').on('click', function (e) {

        let $this = $(this),
            imgs = $('.pr__img'),
            img = $this.find('.pr__img-img'),
            src = img.attr('src'),
            image = $('.pr__image-img');

        imgs.removeClass('active');
        image.attr('src', src);
        $this.addClass('active');

    });


    let productSwithes = document.querySelector('.pr__sws-list');
    if (productSwithes) {

        let switches = new Switches({
            sws: '.pr__sws-list',
            sw: '.pr__sw',
            line: '.pr__subline',
            tab: '.pr__tab',
            tabs: '.pr__tabs',
            autoWidth: true
        }).init();
    }

    $('.pr__rating').on('change','input', function (e) {
        let $this = $(this),
            val = $this.val(),
            item = $this.closest('.buyItem'),
            id = item.data('id'),
            rating = $this.closest('.rating'),
            data = {
                action: 'productRating',
                id: id,
                val: val
            };

        $.ajax({
            dataType: "json",
            type: "POST",
            url: 'ajax.php',
            data: data,
            success: function (result) {
                if (result.status) {
                    rating.find('input').prop('checked', false);
                    rating.find('input[value='+result.rating+']').prop('checked', true);
                } else {
                    alert('Что-то пошло не так, попробуйте еще раз!!!');
                }
            },
            error: function (result) {
                alert('Что-то пошло не так, попробуйте еще раз!!!');
            }
        });


    });

    $('.pr__revs').on('change','input', function (e) {
        let $this = $(this),
            val = $this.val(),
            item = $this.closest('.rev'),
            id = item.data('id'),
            rating = $this.closest('.rating'),
            data = {
                action: 'productRevRating',
                id: id,
                val: val
            };

        $.ajax({
            dataType: "json",
            type: "POST",
            url: 'ajax.php',
            data: data,
            success: function (result) {
                if (result.status) {
                    debugger;
                    rating.find('input').prop('checked', false);
                    rating.find('input[value='+result.rating+']').prop('checked', true);
                } else {
                    alert('Что-то пошло не так, попробуйте еще раз!!!');
                }
            },
            error: function (result) {
                alert('Что-то пошло не так, попробуйте еще раз!!!');
            }
        });


    });

    $('.prRevLike').on('click', function (e) {
        let $this = $(this),
            count = $this.find('.rev__like-count'),
            val = Number(count.text()),
            item = $this.closest('.rev'),
            id = item.data('id'),
            data = {
                action: 'productRevLike',
                id: id,
                val: val
            };

        $.ajax({
            dataType: "json",
            type: "POST",
            url: 'ajax.php',
            data: data,
            success: function (result) {
                if (result.status) {
                    count.text(result.value);
                } else {
                    alert('Что-то пошло не так, попробуйте еще раз!!!');
                }
            },
            error: function (result) {
                alert('Что-то пошло не так, попробуйте еще раз!!!');
            }
        });
    });

    $('.prRevDislike').on('click', function (e) {
        let $this = $(this),
            count = $this.find('.rev__dislike-count'),
            val = Number(count.text()),
            item = $this.closest('.rev'),
            id = item.data('id'),
            data = {
                action: 'productRevDislike',
                id: id,
                val: val
            };

        $.ajax({
            dataType: "json",
            type: "POST",
            url: 'ajax.php',
            data: data,
            success: function (result) {
                if (result.status) {
                    count.text(result.value);
                } else {
                    alert('Что-то пошло не так, попробуйте еще раз!!!');
                }
            },
            error: function (result) {
                alert('Что-то пошло не так, попробуйте еще раз!!!');
            }
        });
    });

});

$(window).on('load', function (e) {

    let row = $('.arts__row_bottom'),
        items = row.find('.arts__item'),
        imgs = $('.arts__row_bottom .arts__item-image'),
        maH = 0;

    items.each(function (indx,elem) {
        let item = $(elem),
            img = item.find('.arts__item-image'),
            height = img.outerHeight();

        if (maH<height){
            maH = height;
        }
    });


    imgs.css('height', maH);
});
$(function () {

    let cabinetSwithes = document.querySelector('.cab__sws-list');
    if (cabinetSwithes) {

        let switches = new Switches({
            sws: '.cab__sws-list',
            sw: '.cab__sw',
            line: '.cab__subline',
            tab: '.cab__tab',
            tabs: '.cab__tabs',
            autoWidth: true
        }).init();
    }

    let headers = $('.compare__header'),
        rows = $('.compare__item-row');


    rows.each(function (i, elem) {
        let row = $(elem),
            rowH = row.outerHeight(),
            header = $(headers[i]),
            headerH = header.outerHeight(),
            maxH = headerH;

        if (rowH > headerH) {
            maxH = rowH;
        }

        row.css('height', maxH + 'px');
        header.css('height', maxH + 'px');
    });

    $('.pass__field-show').on('click', function (e) {
        let $this = $(this),
            field = $this.closest('.pass__field'),
            input = field.find('.input'),
            inputType = input.attr('type');

        if (inputType == 'password') {
            input.attr('type', 'text');
        } else {
            input.attr('type', 'password');
        }
    });

    $('.pass__form').validate({
        rules: {
            password: {
                required: true,
                minlength: 6
            },
            confirmPassword: {
                required: true,
                equalTo: "#password"
            },

        },
        messages: {
            password: {
                required: "Введите ваш пароль",
                minlength: "Не менее 6-ти символов"
            },
            confirmPassword: {
                required: "Введите ваш пароль",
                equalTo: "Пароли не совпадают"
            }
        },
        submitHandler: function(form) {
            console.log(this);
        }
    });

});
$(function () {
    $('.revRating').on('change','input', function (e) {
        let $this = $(this),
            val = $this.val(),
            item = $this.closest('.rev'),
            id = item.data('id'),
            rating = $this.closest('.rating'),
            data = {
                action: 'reviewRating',
                id: id,
                val: val
            };

        $.ajax({
            dataType: "json",
            type: "POST",
            url: 'ajax.php',
            data: data,
            success: function (result) {
                if (result.status) {
                    rating.find('input').prop('checked', false);
                    rating.find('input[value='+result.rating+']').prop('checked', true);
                } else {
                    alert('Что-то пошло не так, попробуйте еще раз!!!');
                }
            },
            error: function (result) {
                alert('Что-то пошло не так, попробуйте еще раз!!!');
            }
        });


    });

    $('.revLike').on('click', function (e) {
        let $this = $(this),
            count = $this.find('.rev__like-count'),
            val = Number(count.text()),
            item = $this.closest('.rev'),
            id = item.data('id'),
            data = {
                action: 'revLike',
                id: id,
                val: val
            };

        $.ajax({
            dataType: "json",
            type: "POST",
            url: 'ajax.php',
            data: data,
            success: function (result) {
                if (result.status) {
                    count.text(result.value);
                } else {
                    alert('Что-то пошло не так, попробуйте еще раз!!!');
                }
            },
            error: function (result) {
                alert('Что-то пошло не так, попробуйте еще раз!!!');
            }
        });
    });

    $('.revDislike').on('click', function (e) {
        let $this = $(this),
            count = $this.find('.rev__dislike-count'),
            val = Number(count.text()),
            item = $this.closest('.rev'),
            id = item.data('id'),
            data = {
                action: 'revDislike',
                id: id,
                val: val
            };

        $.ajax({
            dataType: "json",
            type: "POST",
            url: 'ajax.php',
            data: data,
            success: function (result) {
                if (result.status) {
                    count.text(result.value);
                } else {
                    alert('Что-то пошло не так, попробуйте еще раз!!!');
                }
            },
            error: function (result) {
                alert('Что-то пошло не так, попробуйте еще раз!!!');
            }
        });
    });
});
$(function () {
    let feed = $('.feed'),
        feedWrap = feed.find('.feed__wrap');

    feed.validate(
        {
            rules: {
                name: "required",
                email: "required"
            },
            messages: {
                name: "Введите ваше Имя",
                email: "Введите ваш E-mail",
            },

            submitHandler: function (form) {
                sendAjax(form);
            }
        }
    );

    feed.on('click', '.feed__close', function (e) {
        let success = $(this).closest('.feed__success');
        success.remove();
    });

    function sendAjax(form) {
        let data = $(form).serialize();

        $.ajax({
            dataType: "json",
            type: "POST",
            url: 'ajax.php',
            data: data,
            success: function (result) {
                if (result.status) {
                    feedWrap.append(result.html);
                } else {
                    alert('Что-то пошло не так, попробуйте еще раз!!!');
                }
            },
            error: function (result) {
                alert('Что-то пошло не так, попробуйте еще раз!!!');
            }
        });
    }
});
$(function () {
    let compareLink = $('.compare-link');
    $('body').on('click', '.compareProduct', function (e) {
        e.preventDefault();
        let $this = $(this),
            item = $this.closest('.buyItem'),
            id = item.data('id'),
            title = $this.find('.compareProduct__title'),
            data = {
                action: 'compare',
                id: id
            };

        $.ajax({
            dataType: "json",
            type: "POST",
            url: 'ajax.php',
            data: data,
            success: function (result) {
                if (result.status) {
                    compareLink.replaceWith(result.html);
                    $this.addClass('disabled');
                    title.text('В сравнении');
                } else {
                    alert('Что-то пошло не так, попробуйте еще раз!!!');
                }
            },
            error: function (result) {
                alert('Что-то пошло не так, попробуйте еще раз!!!');
            }
        });


    });
});
$(function (e) {
   $('.cart__item-del').on('click', function (e) {
       let $this = $(this),
           item = $this.closest('.cart__item');


      item.remove();
       calcPrice();
   });
});

//# sourceMappingURL=main.min.js.map