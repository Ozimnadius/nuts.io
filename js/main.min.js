//@prepros-append pages/common.js
//@prepros-append pages/sliders.js
//@prepros-append pages/index.js
//@prepros-append pages/ispecs.js
function Switches(prop) {
    this.sws = document.querySelector(prop.sws);
    this.width = this.sws.offsetWidth;
    this.swsList = document.querySelectorAll(prop.sw);
    this.line = document.querySelector(prop.line);
    this.tabs = document.querySelectorAll(prop.tab);
    this.tabSelector = prop.tab;
    this.autoWidth = prop.autoWidth || false;
    // this.scrollbar = prop.scrollbar || true;

    if (prop.switchActive === false) {
        this.switchActive = false
    } else {
        this.switchActive = true;
    }

    if (prop.scrollbar === false) {
        this.scrollbar = false;
    } else {
        this.scrollbar = true;
    }

    let that = this;

    this.init = function () {
        let $this = that.swsList[0],
            percent = ($this.offsetLeft / that.width) * 100,
            id = $this.dataset.id,
            tab = document.querySelector(that.tabSelector + '[data-id="' + id + '"]');


        for (let i = 0; i < that.swsList.length; i++) {
            that.swsList[i].classList.remove('active');
        }

        for (let i = 0; i < that.tabs.length; i++) {
            that.tabs[i].classList.remove('active');
        }

        tab.classList.add('active');
        $this.classList.add('active');

        if (that.scrollbar) {
            that.line.style.left = percent + '%';

            if (that.autoWidth) {
                let lineWidth = $this.offsetWidth + 'px';
                that.line.style.width = lineWidth;
            }
        }
    };

    for (let i = 0; i < that.swsList.length; i++) {
        that.swsList[i].addEventListener('click', function (e) {

            let percent = (this.offsetLeft / that.width) * 100,
                id = this.dataset.id,
                tab = document.querySelector(that.tabSelector + '[data-id="' + id + '"]');


            for (let i = 0; i < that.swsList.length; i++) {
                that.swsList[i].classList.remove('active');
            }

            for (let i = 0; i < that.tabs.length; i++) {
                that.tabs[i].classList.remove('active');
            }

            tab.classList.add('active');
            this.classList.add('active');

            if (that.scrollbar) {
                that.line.style.left = percent + '%';

                if (that.autoWidth) {
                    let lineWidth = this.offsetWidth + 'px';
                    that.line.style.width = lineWidth;
                }
            }

        });
    }
}

function animateToCart(item) {

    var offset = item.offset(),
        width = item.outerWidth(),
        height = item.outerHeight(),
        offsetTop = offset.top,
        offsetLeft = offset.left,
        cart = $('.basket-link');

    $(item)
        .clone()
        .css({
            width: width,
            height: height,
            position: 'absolute',
            'z-index': '11100',
            top: offsetTop,
            left: offsetLeft
        })
        .appendTo("body")
        .animate({
            opacity: 0.05,
            left: cart.offset()['left'],
            top: cart.offset()['top'],
            width: 20,
            height: 13.2
        }, 2000, function () {
            $(this).remove();
        });
}

$('.buy').on('click', function (e) {
    e.preventDefault();
    let $this = $(this),
        item = $this.closest('.item'),
        id = item.attr('data-id'),
        img = item.find('.item__img-img');
    animateToCart(img);
});
$(function () {
    var ispecsSlider = new Swiper ('.ispecs__container', {
        slidesPerView: 4,
        slidesPerGroup: 4,
        spaceBetween: 20,
        navigation: {
            nextEl: '.ispecs__next .arrow',
            prevEl: '.ispecs__prev .arrow',
        },
        pagination: {
            el: '.ispecs__pag',
            clickable: true
        },

    });
});
$(function () {

    $('.search__input').on('input', $.debounce(sendAjax, 300));
    $('.search__input').closest();
    function sendAjax(){
        let $this = $('.search__input'),
            val = $this.val(),
            form = $this.closest('.search'),
            rep = form.find('.search__ajax'),
            data = form.serialize();

        if (val.length > 2) {
            $.ajax({
                dataType: "json",
                type: "POST",
                url: 'ajax.php',
                data: data,
                success: function (result) {
                    if (result.status) {
                        rep.html(result.html).addClass('active');
                    } else {
                        alert('Что-то пошло не так, попробуйте еще раз!!!');
                    }
                },
                error: function (result) {
                    alert('Что-то пошло не так, попробуйте еще раз!!!');
                }
            });
        } else {
            rep.removeClass('active');
        }
    }

    $('.search__clear').on('click', function (e) {
        let $this = $(this),
            form = $this.closest('.search');

        form.trigger('reset');
    });

    $('.search').on('reset', function (e) {
        let $this = $(this),
            ajax = $this.find('.search__ajax');
        ajax.removeClass('active');
    });

    let ispecsSwithes = document.querySelector('.ispecs__sws-list');
    if (ispecsSwithes) {

        let switches = new Switches({
            sws: '.ispecs__sws-list',
            sw: '.ispecs__sw',
            line: '.ispecs__subline',
            tab: '.ispecs__tab',
            autoWidth: true
        }).init();
    }

});
$(function () {
    let maxH = 0,
        tabs = $('.ispecs__tabs');
    $('.ispecs__tab').each(function (indx, elem) {
        let tab = $(elem),
            height = tab.outerHeight();

        if (maxH < height) {
            maxH = height;
        }
    });
    tabs.css('height', maxH + 'px');


    $('.count__up').on('click', function (e) {
        e.preventDefault();

        let $this = $(this),
            count = $this.closest('.count'),
            input = count.find('.count__input'),
            val = Number(input.val());
        val++;

        input.val(val);

    });

    $('.count__down').on('click', function (e) {
        e.preventDefault();

        let $this = $(this),
            count = $this.closest('.count'),
            input = count.find('.count__input'),
            val = Number(input.val());
        if (val>1) {
            val--;
        }

        input.val(val);

    });

});

//# sourceMappingURL=main.min.js.map